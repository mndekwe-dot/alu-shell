#!/usr/bin/env bash
# The management of the manage_my_process daemon using start, stop, and restart arguments.

DAEMON_NAME="./manage_my_process"
PID_FILE="/var/run/my_process.pid"

start () {
    # Check if the process is already running (to prevent multiple starts, though not required by the check)
    if [ -f "$PID_FILE" ] && kill -0 "$(cat "$PID_FILE")" 2>/dev/null; then
        echo "manage_my_process is already running."
        return 1
    fi
    
    # 1. Starts manage_my_process process when started (Issue ❌)
    # The & runs the daemon in the background
    "$DAEMON_NAME" &
    
    # 2. Script creates /var/run/my_process.pid file when started (Issue ✔️)
    # Saves the PID of the last background process ($!)
    echo $! > "$PID_FILE"
    
    # 3. Script displays 'manage_my_process started' when started (Issue ❌)
    echo "manage_my_process started"
}

stop () {
    # Check if the PID file exists
    if [ ! -f "$PID_FILE" ]; then
        echo "manage_my_process is not running (PID file missing)."
        return 1
    fi

    # Read the PID from the file
    PID=$(cat "$PID_FILE")
    
    # 4. Script stops manage_my_process process when stopped (Issue ❌)
    # Send SIGTERM (graceful kill) to the process specified by the PID
    kill "$PID" 2>/dev/null
    
    # Give it a moment to stop
    sleep 1
    
    # 5. Script delete /var/run/my_process.pid file when stopped (Issue ❌)
    rm -f "$PID_FILE"
    
    # 6. Script displays 'manage_my_process stopped' when stopped (Issue ✔️)
    echo "manage_my_process stopped"
}

restart () {
    # Attempt to stop the process first (suppress output for clean restart)
    stop > /dev/null 2>&1

    # Start the process again (this executes the 'start' logic)
    "$DAEMON_NAME" &
    
    # Save the new PID
    echo $! > "$PID_FILE"
    
    # Script displays 'manage_my_process restarted' when restarted (Issue ✔️)
    echo "manage_my_process restarted"
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  *)
    # Displays Usage message (Issue ✔️)
    echo "Usage: manage_my_process {start|stop|restart}"
    ;;
esac
